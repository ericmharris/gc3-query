swagger: '2.0'
info:
  description: An account is used in Compute Classic to store credentials that must be used to access another service. For example, you use an account to define the credentials and other details of the Oracle Cloud Infrastructure Object Storage Classic instance in which you store machine images.<p>You can view accounts using the HTTP requests listed below.
  version: 1.0.0
  title: Accounts
  # put the contact info for your development or API team
  contact:
    email: eric.harris@oracle.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
# Added by API Auto Mocking Plugin
schemes:
 - https
produces: 
- application/oracle-compute-v3+json
consumes: 
- application/oracle-compute-v3+json
# tags are used for organizing operations
tags:
- name: admins
  description: Secured Admin-only calls
- name: developers
  description: Operations available to regular developers
- name: Accounts
  description: An account is used in Compute Classic to store credentials that must
paths:
  "/account/{container}/":
    get:
      tags:
      - Accounts
      summary: Retrieve Details of all Accounts in a Container
      operationId: get_all_account_data
      description: Retrieves details of the accounts that are in the specified identity
      parameters:
      - name: container
        in: path
        description: <code>Compute-<em>identity_domain</em></code><p>For example <code>Compute-acme</code>.
        required: true
        type: string
      - name: Cookie
        in: header
        type: string
        description:  The Cookie header must be included with every request to the service. It must be set to the value of the set-cookie header in the response received to the POST /authenticate/ call.
      responses:
        "200":
          description: OK, return all account data
          headers:
            set-cookie:
              type: string
              description: The cookie value is returned if the session is extended
          schema:
            type: object
            properties:
              result: 
                type: array
                description: List of Accounts
                items:
                  "$ref": "#/definitions/Account"
        "400":
          description: bad input parameter
definitions:
  Account:
    type: object
    title: Account
    properties:
      name:
        type: string
        example: '/Compute-587626604/cloud_storage'
        description: 'Two-part name of the account: <code>/Compute-<em>identity_domain</em>/default</code> or <code>/Compute-<em>identity_domain</em>/cloud_storage</code>'
      uri:
        type: string
        description: URL for cloud storage
        format: url
        example: 'https://compute.uscom-central-1.oraclecloud.com/account/Compute-587626604/cloud_storage'
      accounttype:
        type: string
        example: None that I know of
        x-nullable: true
      credentials:
        type: object
        x-nullable: true
        additionalProperties:
          type: object
      objectproperties:
        type: object
        x-nullable: true
        additionalProperties:
          type: object
      description:
        type: string
        description: 'What sort of account'
        x-nullable: true
