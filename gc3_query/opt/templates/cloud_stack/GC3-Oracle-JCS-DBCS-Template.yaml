template: 
  templateName: GC3-Oracle-JCS-DBCS-Template
  templateVersion: 1.2.30
  templateDescription: "Provisions a Stack composed of Java Cloud Service and Database Cloud Service instances using Oracle Storage Cloud Service. **WARNING** You will be billed for the Cloud resources created if you create a Cloud Stack from this template"
  parameters: 
    custID:
      label: Customer ID
      description: '(String, lower case) Customer ID, Confirmation:F4 from intake excel.'
      type: String
      minLength: 4
      maxLength: 12
      mandatory: true
      default: 'naac'
    projectID:
      label: Project ID
      description: '(String, lower case) Project ID, Confirmation:F5 from intake excel.'
      type: String
      minLength: 4
      maxLength: 12
      mandatory: true
    deploymentID:
      label: Deployment ID
      description: "(String) If they have multiple deployments, eg. two JCS instances, denote here (default: 1)."
      type: String
      default: None
      allowedValues: ['None', '01', '02', '03', '04', '05', '06', '07', '08', '09', '10' ]
      mandatory: true
    deploymentType:
      label: Deployment Type
      description: >-
        (String) This is the deployment type and will normally be 'jcs', but change this if this instance will be part of a larger custom deployment (default: jcs).
      type: String
      mandatory: true
      default: 'dbcs'
      allowedValues:
        - 'dbcs'
        - 'jcs'
        - 'soacs'
    wlVersion: 
      label: JCS Version
      description: "Select a JCS Version"
      type: String
      default: 12cRelease212
      allowedValues: {"11gR1": "Oracle WebLogic Server 11g, 11.1.1.7", "12cR3": "Oracle WebLogic Server 12c, 12.1.3.0", "12cRelease212": "Oracle WebLogic Server 12c, 12.2.1.2"}
    wlComputeShape: 
      label: Compute Shape
      description: Select a Compute Shape for this service.
      type: ComputeShape
      default: oc3
      allowedValues: [ oc3, oc4, oc5, oc6, oc1m, oc2m, oc3m, oc4m ]
    wlByol:
      label: Bring Your Own License
      description: "Check this field if you wish to use your own license. If you choose this please make sure that you have proper entitlements to use for new service instances you are creating."
      type: Boolean
      default: false
      condition: jcsBYOL
    wlEntitlement:
      label: JCS Entitlement
      description: "This is the entitlement id used to identify the service in the tenant account."
      type: String
      mandatory: true
      condition: jcsMultEntitl
      allowedValues: {"Fn::GetParam": _account.jaas.entitlementids}
    publicKeyText: 
      label: SSH Public Key
      description: Click Edit to generate a new key pair, enter an existing public keys value or upload a new public key.
      type: ssh
      mandatory: true
      sensitive: true
    wlAdminUser: 
      label: Administrator Username
      description: "Your choice of name for the JCS administration user. Must be between 8 and 128 ASCII characters and cannot contain a tab, brackets, parentheses or the characters , < > & # | ?"
      type: String
      minLength: 8
      maxLength: 128
      default: weblogic
      allowedPattern: "[\\p{Print}&&[^',<>#&|\\?\\(\\)\\{\\}\t ]]++"
      constraintDescription: "JCS administration username must be between 8 and 128 ASCII characters and cannot contain a tab, brackets, parentheses or the characters , < > & # | ?"
    jcsPwd: 
      label: Password to access JCS
      description: "Password to access JCS. Password must be between 8 and 30 characters with at least one lower case letter, one upper case letter, one number and one special character (_,#). For example, Ach1z0#d"
      type: Password
      minLength: 8
      maxLength: 30
      allowedPattern: "^(?=.*?[A-Z])(?=.*?[a-z])(?=.*[0-9])[a-zA-Z]([a-zA-Z0-9_#])+$"
      mandatory: true
      sensitive: true
      constraintDescription: "Password must be between 8 and 30 characters with at least one lower case letter, one upper case letter, one number and one special character (_,#). For example, Ach1z0#d"
    dbSid: 
      label: DB Name (SID)
      description: "Database name of your choice, up to 8 characters; must begin with a letter and can contain only letters and numbers."
      type: String
      minLength: 1
      maxLength: 8
      default: ORCL
      allowedPattern: "^[a-zA-Z][a-zA-Z0-9]*$"
      constraintDescription: "Database name can contain up to 8 characters; must begin with a letter and can contain only letters and numbers. "
    dbVersion: 
      label: DBCS Version
      description: "Select a DBCS Version"
      type: String
      default: 12.1.0.2
      allowedValues: {"11.2.0.4": "Oracle Database 11g Release 2", "12.1.0.2": "Oracle Database 12c Release 1",  "12.2.0.1": "Oracle Database 12c Release 2" }
    dbByol:
      label: Bring Your Own License
      description: "Check this field if you wish to use your own license. If you choose this please make sure that you have proper entitlements to use for new service instances you are creating."
      type: Boolean
      default: false
      condition: dbcsBYOL
    dbEntitlement:
      label: DB Entitlement
      description: "This is the entitlement id used to identify the service in the tenant account."
      type: String
      condition: dbcsMultEntitl
      mandatory: true
      allowedValues: {"Fn::GetParam": _account.dbaas.entitlementids}
    dbcsPwd: 
      label: Password to access DBCS
      description: "Password to access DBCS. Password must be between 8 and 30 characters with at least one lower case letter, one upper case letter, one number and one special character (_,#). For example, Ach1z0#d"
      type: Password
      minLength: 8
      maxLength: 30
      allowedPattern: "^(?=.*?[A-Z])(?=.*?[a-z])(?=.*[0-9])[a-zA-Z]([a-zA-Z0-9_#])+$"
      mandatory: true
      sensitive: true
      constraintDescription: "Password must be between 8 and 30 characters with at least one lower case letter, one upper case letter, one number and one special character (_,#). For example, Ach1z0#d"
    # commonPwd: 
    #   label: Password (to access JCS and DBCS)
    #   description: "Password to access JCS and DBCS. Password must be between 8 and 30 characters with at least one lower case letter, one upper case letter, one number and one special character (_,#). For example, Ach1z0#d"
    #   type: Password
    #   minLength: 8
    #   maxLength: 30
    #   allowedPattern: "^(?=.*?[A-Z])(?=.*?[a-z])(?=.*[0-9])[a-zA-Z]([a-zA-Z0-9_#])+$"
    #   mandatory: true
    #   sensitive: true
    #   constraintDescription: "Password must be between 8 and 30 characters with at least one lower case letter, one upper case letter, one number and one special character (_,#). For example, Ach1z0#d"
    backupDestination:
      label: Backup Destination
      description: Backup Destination can be None, or Both Remote and Disk Storage
      type: String
      default: NONE
      mandatory: true
      allowedValues: {"NONE": "None", "BOTH": "Both Remote and Disk Storage" }
    backupStorageContainer:
      label: Cloud Storage Container
      description: https://foo.storage.oraclecloud.com/MyService-bar/MyContainer. To identify the URL of your storage account, see the <a href="http://docs.oracle.com/en/cloud/iaas/storage-cloud/cssto/accessing-oracle-storage-cloud-service.html#CSSTO-GUID-221133EF-F408-4DCF-9BF7-7A1F12C3E8A6"> documentation</a>.
      type: String
      condition: backupRequired
      default:
        - 'Fn::Join':
            - ''
            - - 'Fn::GetParam': _account.jaas.cloudstorageuri
              - 'Fn::GetParam': custID
              - '_'
              - 'Fn::GetParam': projectID
              - '_d'
              - 'Fn::GetParam': deploymentID
              - '_'
              - 'Fn::GetParam': deploymentType
              - '_'
              - backup
    backupStorageUser:
      label: Username
      description: Name of an Oracle Storage Cloud Service user that has write access to the specific container. If the container does not exist, then this user must have the Service Administrator role.
      type: String
      condition: backupRequired
    backupStoragePassword:
      label: Password
      description: Password for the Oracle Storage Cloud Service user.
      type: String
      sensitive: true
      condition: backupRequired
    createBackupContainer:
      label: Create Cloud Storage Container
      description: "Check this option if you want to create a new container with the information specified above."
      type: Boolean
      default: true
      condition: backupRequired
    dbComputeShape:
      label: Compute Shape
      description: Select a Compute Shape for this service.
      type: ComputeShape
      default: oc3
      allowedValues: [ oc3, oc4, oc5, oc6, oc1m, oc2m, oc3m, oc4m ]
    dbEdition:
      label: Database Edition
      description: Select which edition of Oracle.
      type: String
      default: EE
      allowedValues: {"SE": "Standard Edition", "EE": "Enterprise Edition" }        
    dbStorage: 
      label: Usable Database Storage (GB)
      description: "Enter the value for usable Database Storage in GB. The number must be between 15 and 1200."
      type: Number
      default: 25
    dbCharset: 
      label: Character Set
      description: "Select a Character Set"
      type: String
      default: AL32UTF8
      allowedValues: {"AL32UTF8": "AL32UTF8 - Unicode Universal character set UTF-8 form 32-bit", "UTF8": "UTF8 - Unicode 3.0 Universal character set CESU-8 form 24-bit", "WE8ISO8859P15": "WE8ISO8859P15 - ISO 8859-15 8-bit West European" }        
    dbNcharset: 
      label: National Character Set
      description: "Select a National Character Set"
      type: String
      default: AL16UTF16
      allowedValues: {"AL16UTF16": "AL16UTF16 - Unicode UTF-16 Universal character set", "UTF8": "UTF8 - Unicode 3.0 Universal character set CESU-8 form 24-bit" }        
    dbServiceNamePref: 
      label: Database Service Name
      description: "Database Service Name"
      type: String
      condition: deploymentIDSet
      default: { "Fn::Join": ["", [{"Fn::GetParam": custID},"-",{"Fn::GetParam": projectID},"-D",{"Fn::GetParam": deploymentID},"-","DBCS" ]] }
    jcsServiceNamePref: 
      label: JCS Service Name
      description: "JCS Service Name"
      condition: deploymentIDSet
      type: String
      default: { "Fn::Join": ["", [{"Fn::GetParam": custID},"-",{"Fn::GetParam": projectID},"-D",{"Fn::GetParam": deploymentID},"-","JCS" ]] }
  parameterGroups:
    - label: Customer and Deployment Info
      parameters: [ custID, projectID, deploymentID ]
    - label: Database Cloud
      parameters: [ dbByol, dbEntitlement, dbServiceNamePref, dbSid, dbVersion, dbEdition, dbComputeShape, dbStorage, dbCharset, dbNcharset ]
    - label: Access
      parameters: [ dbcsPwd, wlAdminUser, jcsPwd, publicKeyText ]
    - label: Storage Cloud (for Backup)
      parameters: [ backupDestination,  backupStorageContainer, backupStorageUser, backupStoragePassword, createBackupContainer ]
    - label: Java Cloud
      parameters: [ jcsServiceNamePref, wlByol, wlEntitlement, wlVersion, wlComputeShape]
  conditions:
     jcsMultEntitl: {"Fn::GreaterThan": [{"Fn::Size" : {"Fn::GetParam" : _account.jaas.entitlementids}}, 1]}
     dbcsMultEntitl: {"Fn::GreaterThan": [{"Fn::Size" : {"Fn::GetParam" : _account.dbaas.entitlementids}}, 1]}
     jcsBYOL: {"Fn::Equals": [true, "Fn::GetParam": _account.JaaS.BYOL]}
     dbcsBYOL: {"Fn::Equals": [true, "Fn::GetParam": _account.DBaaS.BYOL]}
     backupRequired: {"Fn::Equals": ["BOTH", "Fn::GetParam": backupDestination]}
     deploymentIDSet: {"Fn::Not": [{"Fn::Equals": ["Fn::GetParam": deploymentID, "None"]}]}
     createContainer: {"Fn::If": [backupRequired, {"Fn::Equals": ["true", "Fn::GetParam": createBackupContainer]}, "false"]}
  resources: 
    backupContainer: 
      type: OSS.Container
      condition: createContainer
      parameters: 
        cloudStorageContainer: { "Fn::GetParam": backupStorageContainer }
        cloudStorageUser: { "Fn::GetParam": backupStorageUser }
        cloudStoragePassword: { "Fn::GetParam": backupStoragePassword }
    jcs: 
      type: jaas
      parameters: 
        serviceName: {"Fn::GetParam": jcsServiceNamePref}
        serviceVersion: { "Fn::GetParam": wlVersion }
        meteringFrequency: HOURLY
        backupDestination: { "Fn::GetParam": backupDestination }
        cloudStorageContainer: { "Fn::GetParam": backupStorageContainer }
        cloudStorageUser: { "Fn::GetParam": backupStorageUser }
        cloudStoragePassword: { "Fn::GetParam": backupStoragePassword }
        vmPublicKeyText: { "Fn::GetParam": publicKeyText }
        isBYOL: { "Fn::If": [jcsBYOL, {"Fn::GetParam": wlByol}, "OPC::NoValue" ]}
        serviceEntitlementId: { "Fn::If": [jcsMultEntitl, {"Fn::GetParam": wlEntitlement}, "OPC::NoValue" ]}
        components:
            WLS:
                adminUserName: { "Fn::GetParam": wlAdminUser }
                adminPassword: { "Fn::GetParam": jcsPwd }
                dbServiceName: { "Fn::GetAtt": [dbcs, serviceName] }
                dbaName: sys
                dbaPassword: { "Fn::GetParam": dbcsPwd }
                shape: { "Fn::GetParam": wlComputeShape }
      depends_on: [ { "Fn::If": [createContainer, backupContainer, "OPC::NoValue" ]} ]
    dbcs: 
      type: dbaas
      parameters: 
        serviceName: {"Fn::GetParam": dbServiceNamePref}
        version: { "Fn::GetParam": dbVersion }
        level: PAAS
        edition: { "Fn::GetParam": dbEdition }
        shape: { "Fn::GetParam": dbComputeShape }
        vmPublicKeyText: { "Fn::GetParam": publicKeyText }
        isBYOL: { "Fn::If": [dbcsBYOL, {"Fn::GetParam": dbByol}, "OPC::NoValue" ]}
        serviceEntitlementId: { "Fn::If": [dbcsMultEntitl, {"Fn::GetParam": dbEntitlement}, "OPC::NoValue" ]}
        parameters: 
          - 
            type: db
            adminPassword: { "Fn::GetParam": dbcsPwd }
            sid: { "Fn::GetParam": dbSid }
            failoverDatabase: no
            backupDestination: { "Fn::GetParam": backupDestination }
            timezone: UTC
            charset: { "Fn::GetParam": dbCharset}
            ncharset: { "Fn::GetParam": dbNcharset}
            cloudStorageContainer: { "Fn::GetParam": backupStorageContainer }
            cloudStorageUser: { "Fn::GetParam": backupStorageUser }
            cloudStoragePwd: { "Fn::GetParam": backupStoragePassword }
            usableStorage: { "Fn::GetParam": dbStorage }
      depends_on: [ { "Fn::If": [createContainer, backupContainer, "OPC::NoValue" ]} ]
  attributes: 
      OraConnectString: 
          value: { "Fn::GetAtt": [dbcs, attributes.CONNECT_DESCRIPTOR] }
          description: DBCS connect descriptor
