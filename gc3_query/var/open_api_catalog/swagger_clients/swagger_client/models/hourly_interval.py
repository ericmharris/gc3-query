# coding: utf-8

"""
    SecRules

    A security rule defines network access over a specified protocol between instances in two security lists, or from a set of external hosts (an IP list) to instances in a security list.<p>Security rules tie the security list, security IP list, and security application entities together.<p>You can create, delete, update, and view security rules using the HTTP requests listed below. For more information about security rules, see <a target=\"_blank\" href=\"http://www.oracle.com/pls/topic/lookup?ctx=stcomputecs&id=STCSG-GUID-1AEDDA2C-3561-4759-B5AD-FB4CD9C2FBD8\">About Security Rules</a> in <em>Using Oracle Cloud Infrastructure Compute Classic</em>.  # noqa: E501

    OpenAPI spec version: 18.1.2-20180126.052521
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from swagger_client.models.interval import Interval  # noqa: F401,E501


class HourlyInterval(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'hourly_interval': 'int'
    }

    attribute_map = {
        'hourly_interval': 'hourlyInterval'
    }

    def __init__(self, hourly_interval=None):  # noqa: E501
        """HourlyInterval - a model defined in Swagger"""  # noqa: E501

        self._hourly_interval = None
        self.discriminator = None

        if hourly_interval is not None:
            self.hourly_interval = hourly_interval

    @property
    def hourly_interval(self):
        """Gets the hourly_interval of this HourlyInterval.  # noqa: E501

        Hours to wait before starting the next backup  # noqa: E501

        :return: The hourly_interval of this HourlyInterval.  # noqa: E501
        :rtype: int
        """
        return self._hourly_interval

    @hourly_interval.setter
    def hourly_interval(self, hourly_interval):
        """Sets the hourly_interval of this HourlyInterval.

        Hours to wait before starting the next backup  # noqa: E501

        :param hourly_interval: The hourly_interval of this HourlyInterval.  # noqa: E501
        :type: int
        """

        self._hourly_interval = hourly_interval

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, HourlyInterval):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
